// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Payments.Domain;

namespace Payments.Domain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210622024810_addedstatustable")]
    partial class addedstatustable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Payments.Model.Entities.FinalBill", b =>
                {
                    b.Property<int>("IdFinalBill")
                        .HasColumnType("int");

                    b.Property<int>("PayerId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("IdFinalBill");

                    b.HasIndex("PayerId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("StatusId");

                    b.ToTable("FinalBill");

                    b.HasData(
                        new
                        {
                            IdFinalBill = 1,
                            PayerId = 1,
                            ReceiverId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            IdFinalBill = 2,
                            PayerId = 2,
                            ReceiverId = 2,
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("Payments.Model.Entities.PayersTable", b =>
                {
                    b.Property<int>("IdPayer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPayer");

                    b.ToTable("PayersTable");

                    b.HasData(
                        new
                        {
                            IdPayer = 1,
                            Name = "eaaav@gad"
                        },
                        new
                        {
                            IdPayer = 2,
                            Name = "htthv@gad"
                        });
                });

            modelBuilder.Entity("Payments.Model.Entities.ReceiversTable", b =>
                {
                    b.Property<int>("IdReceiver")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReceiver");

                    b.ToTable("ReceiversTable");

                    b.HasData(
                        new
                        {
                            IdReceiver = 1,
                            Name = "asdf@gad"
                        },
                        new
                        {
                            IdReceiver = 2,
                            Name = "zztzf@gad"
                        });
                });

            modelBuilder.Entity("Payments.Model.Entities.StatusFinalBill", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatus");

                    b.ToTable("StatusFinalBill");

                    b.HasData(
                        new
                        {
                            IdStatus = 1,
                            Code = "1950",
                            Description = "This is some very dangerous string error",
                            ShortName = "Some Status"
                        });
                });

            modelBuilder.Entity("Payments.Model.Entities.StatusPaymentSolution", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatus");

                    b.ToTable("StatusPaymentSolution");
                });

            modelBuilder.Entity("Payments.Model.Entities.FinalBill", b =>
                {
                    b.HasOne("Payments.Model.Entities.PayersTable", "Payer")
                        .WithMany("FinalBill")
                        .HasForeignKey("PayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Payments.Model.Entities.ReceiversTable", "Receiver")
                        .WithMany("FinalBill")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Payments.Model.Entities.StatusFinalBill", "Status")
                        .WithMany("FinalBill")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payer");

                    b.Navigation("Receiver");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Payments.Model.Entities.PayersTable", b =>
                {
                    b.Navigation("FinalBill");
                });

            modelBuilder.Entity("Payments.Model.Entities.ReceiversTable", b =>
                {
                    b.Navigation("FinalBill");
                });

            modelBuilder.Entity("Payments.Model.Entities.StatusFinalBill", b =>
                {
                    b.Navigation("FinalBill");
                });
#pragma warning restore 612, 618
        }
    }
}
